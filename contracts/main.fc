;;  msg_value - tells us how many ton are received with the message
;; in_msg - complete message
;;  slice - part of the cell
;; impure - function can have side effects which can be ignored
#include "imports/stdlib.fc";

() recv_internal(int msg_value, cell in_msg_full, slice in_msg_body) impure {
    slice cs = in_msg_full.begin_parse(); ;; we open for reading 
    int flags = cs~load_uint(4); ;; 4 bits
    slice sender_address = cs~load_msg_addr();

    int op = in_msg_body~load_uint(32);

    if( op == 1){
        int increment_by = in_msg_body~load_uint(32);

        slice ds = get_data().begin_parse();
        int counter_value = ds~load_uint(32);
        ;; counter logic is coming 
        set_data(begin_cell().store_uint(counter_value + increment_by, 32).store_slice(sender_address).end_cell());
    }
} 

;; slice - return type

(int, slice) get_contract_storage_data() method_id {
    slice ds = get_data().begin_parse();
    return (ds~load_uint(32), ds~load_msg_addr());
}
